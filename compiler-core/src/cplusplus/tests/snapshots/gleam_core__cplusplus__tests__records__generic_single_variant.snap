---
source: compiler-core/src/cplusplus/tests/records.rs
expression: "\npub type Box(inner_type) {\n  Box(inner: inner_type)\n}\n\npub fn make_box(v: inner) {\n  Box(v)\n}\n"
---
#ifndef MY_PACKAGE_MY_MODULE_H_
#define MY_PACKAGE_MY_MODULE_H_

#include <gleam.h>

namespace my {
namespace module {

template <typename T$8>
struct Box;
template <typename T$8>
struct Box$Box;

template <typename T$9>
gleam::Ref<::my::module::Box<T$9>> make_box(T$9 v);

template <typename T$8>
struct Box {
  explicit Box(T$8 inner) : inner(inner) {}
  virtual ~Box() = default;
  T$8 inner;
};

template <typename T$8>
struct Box$Box : public Box<T$8> {
  explicit Box$Box(T$8 inner) : Box<T$8>(inner) {}
  
  
};

} // namespace my
} // namespace module

#endif // MY_PACKAGE_MY_MODULE_H_

---
#include "module.h"

namespace my {
namespace module {

template <typename T$9>
gleam::Ref<::my::module::Box<T$9>> make_box(T$9 v) {
  return gleam::MakeRef<::my::module::Box$Box<T$9>>(v);
};

} // namespace my
} // namespace module

