---
source: compiler-core/src/cplusplus/tests/records.rs
expression: "\npub type Person { Person(name: String) }\n\nfn new(name: String) -> Person {\n  let constructor_fn = Person;\n  constructor_fn(name)\n}\n"
---
#ifndef MY_PACKAGE_MY_MODULE_H_
#define MY_PACKAGE_MY_MODULE_H_

#include <gleam.h>

namespace my {
namespace module {

struct Person;
struct Person$Person;

gleam::Ref<::my::module::Person> new(gleam::String name);

struct Person {
  explicit Person(gleam::String name) : name(name) {}
  virtual ~Person() = default;
  gleam::String name;
};

struct Person$Person : public Person {
  explicit Person$Person(gleam::String name) : Person(name) {}
  
  
};

} // namespace my
} // namespace module

#endif // MY_PACKAGE_MY_MODULE_H_

---
#include "module.h"

namespace my {
namespace module {

gleam::Ref<::my::module::Person> new(gleam::String name) {
  gleam::Function<gleam::Ref<::my::module::Person>, gleam::String> constructor_fn = [=](gleam::String _tmp$$) -> gleam::Ref<::my::module::Person> {
    return gleam::MakeRef<::my::module::Person$Person>(_tmp$$);
  };
  return constructor_fn(name);
};

} // namespace my
} // namespace module

