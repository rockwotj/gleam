---
source: compiler-core/src/cplusplus/tests/expression.rs
expression: "\npub type Person {\n  Person(name: String, age: Int)\n}\n\npub fn next_age(person: Person) -> Int {\n  person.age + 1\n}\n    "
---
#ifndef MY_PACKAGE_MY_MODULE_H_
#define MY_PACKAGE_MY_MODULE_H_

#include <gleam.h>

namespace my {
namespace module {

class Person;

int64_t next_age(gleam::Ref<::my::module::Person> person);

class Person {
public:
  Person(gleam::Ref<gleam::String> name, int64_t age) : m$name(name), m$age(age) {}
  gleam::Ref<gleam::String> name() const { return m$name; }
  int64_t age() const { return m$age; }
private:
  gleam::Ref<gleam::String> m$name;
  int64_t m$age;
};

} // namespace my
} // namespace module

#endif // MY_PACKAGE_MY_MODULE_H_

---
#include "module.h"

namespace my {
namespace module {

int64_t next_age(gleam::Ref<::my::module::Person> person) {
  return person->age() + 1;
};

} // namespace my
} // namespace module

