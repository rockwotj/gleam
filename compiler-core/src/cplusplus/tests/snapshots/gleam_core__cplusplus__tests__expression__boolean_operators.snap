---
source: compiler-core/src/cplusplus/tests/expression.rs
expression: "\npub fn or_op(x, y) {\n  x < 5 || y < 10\n}\npub fn and_op(x, y) {\n  x < 5 && y < 10\n}\npub fn both_ops(x, y) {\n  { x < 5 || y < 10 } && { x > 5 || y > 10 }\n}"
---
#ifndef MY_PACKAGE_MY_MODULE_H_
#define MY_PACKAGE_MY_MODULE_H_

#include <gleam.h>

namespace my {
namespace module {

bool or_op(int64_t x, int64_t y);

bool and_op(int64_t x, int64_t y);

bool both_ops(int64_t x, int64_t y);

} // namespace my
} // namespace module

#endif // MY_PACKAGE_MY_MODULE_H_

---
#include "module.h"

namespace my {
namespace module {

bool or_op(int64_t x, int64_t y) {
  return (x < 5) || (y < 10);
};

bool and_op(int64_t x, int64_t y) {
  return (x < 5) && (y < 10);
};

bool both_ops(int64_t x, int64_t y) {
  return ((x < 5) || (y < 10)) && ((x > 5) || (y > 10));
};

} // namespace my
} // namespace module

